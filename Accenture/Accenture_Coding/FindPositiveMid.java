package Accenture_Coding;

public class FindPositiveMid {
    public static int positivemid(int[] arr){
        int n=arr.length;
        int len=0;
        for (int i=0;i<n;i++){
            if (arr[i]>=0){
                len++;
            }
        }
        int mid=(len-1)/2;
        for (int i=0;i<n;i++){
            if (arr[i]>0){
                if (mid==0){
                    return arr[i];
                }
                mid--;
            }
        }
        return -1;
    }
    public static void main(String[] args) {
//        int[] arr={14,-45,75,-12,-23,56,99,-14};
//        int arr[]={-1,-1,-1,-1,4,-8,-9,8,3};
        int arr[] = {45, -98, 123, -254, 307, -162, 198, -67, 374, -438,
                510, -621, 432, -123, 369, -456, 247, -302, 189, -567,
                87, -91, 54, -732, 845, -99, 203, -451, 312, -234,
                678, -509, 412, -360, 297, -401, 523, -207, 179, -68,
                291, -47, 834, -112, 67, -590, 724, -311, 196, -456,
                389, -510, 651, -721, 102, -365, 473, -812, 234, -542,
                98, -120, 345, -236, 721, -541, 304, -178, 65, -319,
                421, -132, 689, -509, 243, -678, 512, -94, 231, -75,
                67, -412, 591, -827, 45, -231, 724, -562, 137, -390,
                815, -245, 471, -91, 326, -512, 198, -702, 283, -49,
                543, -216, 345, -98, 129, -507, 724, -610, 459, -217,
                139, -547, 812, -496, 231, -72, 135, -368, 489, -73,
                921, -437, 374, -516, 209, -74, 651, -391, 203, -761,
                427, -512, 327, -102, 671, -435, 184, -297, 403, -62,
                157, -934, 281, -451, 74, -320, 634, -527, 198, -72,
                47, -431, 527, -91, 689, -230, 419, -37, 625, -541,
                231, -78, 304, -192, 47, -263, 98, -520, 371, -476,
                814, -237, 495, -672, 139, -437, 502, -289, 319, -74,
                259, -301, 476, -85, 621, -412, 197, -305, 739, -612,
                305, -87, 564, -392, 108, -274, 426, -98, 349, -207,
                134, -658, 724, -831, 197, -459, 812, -273, 349, -502,
                472, -237, 651, -209, 513, -302, 148, -47, 732, -491,
                287, -236, 489, -678, 51, -437, 124, -231, 512, -98,
                647, -315, 284, -104, 391, -527, 402, -710, 98, -375,
                627, -84, 419, -302, 723, -516, 267, -49, 831, -472,
                135, -290, 651, -129, 418, -293, 732, -61, 245, -471,
                123, -650, 293, -412, 728, -275, 194, -97, 625, -512,
                74, -341, 567, -209, 832, -294, 48, -231, 702, -47,
                395, -316, 284, -501, 391, -724, 123, -81, 563, -295,
                410, -147, 832, -298, 57, -415, 294, -302, 721, -196,
                64, -389, 507, -92, 126, -548, 378, -237, 621, -451,
                73, -509, 371, -217, 304, -412, 689, -94, 502, -371,
                123, -568, 431, -207, 641, -391, 302, -298, 724, -490,
                278, -314, 492, -87, 567, -198, 124, -349, 651, -471,
                193, -107, 827, -492, 51, -324, 765, -182, 193, -501,
                48, -315, 729, -471, 305, -87, 432, -92, 789, -651,
                234, -509, 126, -371, 897, -58, 294, -417, 321, -742,
                245, -98, 517, -391, 102, -476, 307, -215, 845, -304,
                129, -512, 623, -392, 74, -98, 509, -243, 198, -456,
                92, -107, 621, -47, 298, -372, 645, -207, 291, -347,
                731, -61, 502, -87, 417, -293, 198, -472, 631, -209,
                387, -421, 125, -314, 927, -234, 61, -437, 501, -308,
                294, -67, 427, -390, 719, -541, 127, -237, 301, -472,
                657, -123, 284, -61, 415, -301, 294, -208, 109, -671,
                726, -193, 43, -127, 612, -498, 305, -421, 731, -64,
                471, -307, 54, -92, 109, -437, 298, -501, 729, -378,
                64, -198, 528, -412, 275, -49, 832, -147, 501, -217,
                198, -390, 632, -127, 473, -94, 217, -361, 129, -472,
                198, -82, 394, -567, 210, -391, 817, -124, 502, -275};

        System.out.println(positivemid(arr));
    }
}
